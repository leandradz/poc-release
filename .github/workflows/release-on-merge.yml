name: Create Release on Commit

on:
  push:
    branches:
      - 'main'

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Determine Version Bump
      id: determine_version
      run: |
        # Fetch all commits to make sure we have the full history
        git fetch --tags
        
        # Get the last 10 commit messages
        COMMITS=$(git log -10 --pretty=format:"%s")
        echo "Recent commits: $COMMITS"
        
        # Initialize bump type to patch
        VERSION_BUMP="patch"

        # Determine version bump type based on commit messages
        for COMMIT in $COMMITS; do
          if [[ "$COMMIT" == feat:* ]]; then
            VERSION_BUMP="minor"
          elif [[ "$COMMIT" == fix:* ]]; then
            VERSION_BUMP="patch"
          elif [[ "$COMMIT" == chore:* ]]; then
            # Chore does not affect the version directly
            continue
          fi
        done

        # Get the current version from the latest tag, default to v0.0.0 if no tags exist
        CURRENT_TAG=$(git describe --tags --abbrev=0 || echo "v0.0.0")
        echo "Current tag: $CURRENT_TAG"

        # Bump the version
        NEW_TAG=$(npm version $VERSION_BUMP --no-git-tag-version | awk '{ print $2 }')
        echo "New tag: $NEW_TAG"
        echo "RELEASE_TAG=$NEW_TAG" >> $GITHUB_ENV

    - name: Create Git Tag
      run: |
        git tag "${{ env.RELEASE_TAG }}"
        git push origin "${{ env.RELEASE_TAG }}"

    - name: Create Release
      run: |
        gh release create "${{ env.RELEASE_TAG }}" \
          --title "${{ env.RELEASE_TAG }}" \
          --notes "Release created for tag: ${{ env.RELEASE_TAG }}."

      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
