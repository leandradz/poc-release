name: Create Release on Merge

on:
  push:
    branches:
      - 'main'

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install GitHub CLI
      run: sudo apt-get install gh

    - name: Set up GitHub CLI authentication
      run: gh auth setup-git
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Get Pull Request Details
      id: pr_details
      run: |
        # Get the commit hash that triggered the workflow
        COMMIT_HASH=$(git rev-parse HEAD)
        echo "Commit hash: $COMMIT_HASH"

        # Get the PR number from the commit message
        PR_NUMBER=$(gh pr list --search "$COMMIT_HASH" --json number -q ".[] | .number")
        echo "Pull Request Number: $PR_NUMBER"

        if [ -z "$PR_NUMBER" ]; then
          echo "No PR found for this commit. Exiting."
          exit 1
        fi

        # Get the base branch (target branch) and head branch (source branch) from the PR
        BRANCH_NAME=$(gh pr view "$PR_NUMBER" --json headRefName -q '.headRefName')
        echo "Source Branch: $BRANCH_NAME"

        echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

    - name: Determine Release Tag
      id: determine_tag
      run: |
        BRANCH_NAME=${{ env.BRANCH_NAME }}
        echo "Branch name: $BRANCH_NAME"

        # Define the version bump based on branch type
        if [[ "$BRANCH_NAME" == feat/* ]]; then
          VERSION_BUMP="minor"
        elif [[ "$BRANCH_NAME" == chore/* ]]; then
          VERSION_BUMP="patch"
        elif [[ "$BRANCH_NAME" == fix/* ]]; then
          VERSION_BUMP="patch"
        elif [[ "$BRANCH_NAME" == hotfix/* ]]; then
          VERSION_BUMP="major"
        elif [[ "$BRANCH_NAME" == "" ]]; then
          echo "No branch name detected. Aborting."
          exit 1
        else
          echo "Unknown branch type, no version bump."
          exit 1
        fi

        # Get the current version from the latest tag, default to v0.0.0 if no tags exist
        CURRENT_TAG=$(git describe --tags --abbrev=0 || echo "v0.0.0")
        echo "Current tag: $CURRENT_TAG"

        # Bump the version
        NEW_TAG=$(npm version $VERSION_BUMP --no-git-tag-version | awk '{ print $2 }')
        echo "New tag: $NEW_TAG"
        echo "RELEASE_TAG=$NEW_TAG" >> $GITHUB_ENV

    - name: Create Release
      run: |
        gh release create "${{ env.RELEASE_TAG }}" \
          --title "${{ env.RELEASE_TAG }}" \
          --notes "Release created for branch type: ${{ env.RELEASE_TAG }}."

      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
