name: Create Release with Changelog

on:
  push:
    branches:
      - 'main'

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Fetch all tags
      run: |
        git fetch --tags

    - name: Determine Version Bump
      id: determine_version
      run: |
        # Get the latest tag from git
        LATEST_TAG=$(git tag --sort=-v:refname | head -n 1)
        if [ -z "$LATEST_TAG" ]; then
          LATEST_TAG="v0.0.0"
        fi
        echo "Latest tag: $LATEST_TAG"

        # Extract the version number from the latest tag (e.g., v1.2.3 to 1.2.3)
        VERSION_NUMBER=$(echo $LATEST_TAG | sed 's/v//')
        echo "Version number: $VERSION_NUMBER"

        # Increment version number based on commit messages
        # Initialize bump type to patch
        VERSION_BUMP="patch"
        COMMITS=$(git log --oneline ${LATEST_TAG}..HEAD)

        for COMMIT in $COMMITS; do
          if [[ "$COMMIT" == feat:* ]]; then
            VERSION_BUMP="minor"
          elif [[ "$COMMIT" == fix:* ]]; then
            VERSION_BUMP="patch"
          elif [[ "$COMMIT" == chore:* ]]; then
            continue
          fi
        done

        # Split version number into parts
        IFS='.' read -r -a VERSION_PARTS <<< "$VERSION_NUMBER"
        MAJOR=${VERSION_PARTS[0]}
        MINOR=${VERSION_PARTS[1]}
        PATCH=${VERSION_PARTS[2]}

        # Increment version number based on the bump type
        if [[ "$VERSION_BUMP" == "major" ]]; then
          MAJOR=$((MAJOR + 1))
          MINOR=0
          PATCH=0
        elif [[ "$VERSION_BUMP" == "minor" ]]; then
          MINOR=$((MINOR + 1))
          PATCH=0
        elif [[ "$VERSION_BUMP" == "patch" ]]; then
          PATCH=$((PATCH + 1))
        fi

        # Create new tag
        NEW_TAG="v${MAJOR}.${MINOR}.${PATCH}"
        echo "New tag: $NEW_TAG"
        
        echo "RELEASE_TAG=$NEW_TAG" >> $GITHUB_ENV

    - name: Generate Changelog
      id: generate_changelog
      run: |
        # Generate changelog from commits between the last and the new tag
        CHANGELOG=$(git log ${LATEST_TAG}..HEAD --pretty=format:"%h %s" --no-merges)
        
        # Save changelog to a file
        echo "Changelog:" > CHANGELOG.md
        echo "$CHANGELOG" >> CHANGELOG.md
        cat CHANGELOG.md

        echo "CHANGELOG=CHANGELOG.md" >> $GITHUB_ENV

    - name: Create Git Tag
      if: env.RELEASE_TAG != ''
      run: |
        echo "Creating tag ${RELEASE_TAG}"
        git tag "${{ env.RELEASE_TAG }}"
        git push origin "${{ env.RELEASE_TAG }}"

    - name: Create Release
      if: env.RELEASE_TAG != ''
      run: |
        gh release create "${{ env.RELEASE_TAG }}" \
          --title "${{ env.RELEASE_TAG }}" \
          --notes "$(cat CHANGELOG.md)"

      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
